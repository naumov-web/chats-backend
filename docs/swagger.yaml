swagger: "2.0"
info:
  title: Chats API
  description: Docs for Chats API
  version: 1.0.0
schemes:
  - http
host: 127.0.0.1:31080
basePath: /api

securityDefinitions:
  JWT:
    type: apiKey
    in: header
    name: Authorization

paths:

  /v1/auth/register/random-account:
    post:
      tags:
        - auth
      summary: Register random account
      description: Register random account without login and password
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          type: string
          name: X-Locale
          enum:
            - ru
            - en
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/RegisterRandomAccountSuccessResponseModel"

  /v1/auth/register:
    post:
      tags:
        - auth
      summary: Register new account
      description: Register new account with username and password
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          type: string
          name: X-Locale
          enum:
            - ru
            - en
        - name: "RegisterAccountRequestBody"
          in: body
          description: "Request body for registration of new account"
          required: true
          schema:
            $ref: "#/definitions/RegisterAccountRequestModel"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/RegisterAccountSuccessResponseModel"
        422:
          description: "Validation error"
          schema:
            $ref: "#/definitions/ValidationErrorResponseModel"

  /v1/auth/login:
    post:
      tags:
        - auth
      summary: Authorize user
      description: Authorize user by username and password
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          type: string
          name: X-Locale
          enum:
            - ru
            - en
        - name: "LoginRequestBody"
          in: body
          description: "Request body for authorization"
          required: true
          schema:
            $ref: "#/definitions/LoginRequestModel"
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/LoginResponseModel"
        403:
          description: "Forbidden"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"
        422:
          description: "Validation error"
          schema:
            $ref: "#/definitions/ValidationErrorResponseModel"

  /v1/account/chats:
    post:
      tags:
        - chats
      summary: Create chat
      description: Create new chat
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
        - in: header
          name: X-Locale
          type: string
          enum:
            - ru
            - en
        - name: "CreateChatRequestBody"
          in: body
          description: "Request body for creation of chat"
          required: true
          schema:
            $ref: "#/definitions/CreateChatRequestModel"
      responses:
        201:
          description: Successful operation
          schema:
            $ref: "#/definitions/CreateChatResponseModel"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"
        422:
          description: "Validation error"
          schema:
            $ref: "#/definitions/ValidationErrorResponseModel"

  /v1/handbooks:
    get:
      tags:
        - handbooks
      summary: Get all handbooks
      description: Get all available handbooks
      produces:
        - application/json
      parameters:
        - in: header
          name: X-Locale
          type: string
          enum:
            - ru
            - en
      responses:
        200:
          description: Successful operation
          schema:
            $ref: "#/definitions/HandbooksResponseModel"

definitions:

  # Register random account
  RegisterRandomAccountSuccessResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      token:
        type: string
      username:
        type: string

  # Register account
  RegisterAccountRequestModel:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string

  RegisterAccountSuccessResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      token:
        type: string
      username:
        type: string

  # Login
  LoginRequestModel:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string

  LoginResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      token:
        type: string

  # Create chat
  CreateChatRequestModel:
    type: object
    required:
      - name
      - typeId
    properties:
      name:
        type: string
      typeId:
        type: integer

  CreateChatResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      id:
        type: integer

  # Handbooks
  HandbooksResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string
      chat_types:
        type: array
        items:
          $ref: "#/definitions/DefaultHandbookItemResponseModel"

  # Common
  DefaultHandbookItemResponseModel:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string

  DefaultErrorResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string

  ValidationErrorResponseModel:
    type: object
    properties:
      errors:
        type: object
